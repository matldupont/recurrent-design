/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface RecButton {
      'inverse': boolean;
      'loading': boolean;
      'primary': boolean;
    }
  }

  interface HTMLRecButtonElement extends StencilComponents.RecButton, HTMLStencilElement {}

  var HTMLRecButtonElement: {
    prototype: HTMLRecButtonElement;
    new (): HTMLRecButtonElement;
  };
  interface HTMLElementTagNameMap {
    'rec-button': HTMLRecButtonElement;
  }
  interface ElementTagNameMap {
    'rec-button': HTMLRecButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'rec-button': JSXElements.RecButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface RecButtonAttributes extends HTMLAttributes {
      'inverse'?: boolean;
      'loading'?: boolean;
      'primary'?: boolean;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
